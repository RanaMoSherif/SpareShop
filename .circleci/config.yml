  version: 2.1

  jobs:
    build:
      docker:
        - image: mcr.microsoft.com/dotnet/sdk:7.0
      resource_class: small
      steps:
        - checkout
        - run:
            name: Install unzip
            command: apt-get update && apt-get install -y unzip
        - run:
            name: Find .sln file and run dotnet restore
            command: |
              SLN_FILE=$(find . -name "*.sln")
              echo "Found solution file: $SLN_FILE"
              dotnet restore $SLN_FILE
        - run:
            name: Find .sln file and run dotnet publish
            command: |
              SLN_FILE=$(find . -name "*.sln")
              dotnet publish $SLN_FILE -c Release -o out
        - run:
            name: Install dotnet-sonarscanner
            command: |
              dotnet tool install --global dotnet-sonarscanner --version 5.11.0
              echo 'export PATH="$PATH:/root/.dotnet/tools"' >> $BASH_ENV

        - run:
            name: Install JAVA
            command: |
              # echo "deb http://ftp.debian.org/debian stable main contrib non-free" >> /etc/apt/sources.list
              # apt update
              apt install -y openjdk-17-jdk
              set JAVA_HOME /usr/lib/jvm/java-17-openjdk-amd64/
              export JAVA_HOME
#        - run: mkdir -p /usr/share/man/man1
        - run:
            name: Run sonarscanner
            command: |
              SLN_FILE=$(find . -name "*.sln")
              echo "Found solution file: $SLN_FILE"
              dotnet sonarscanner begin /k:RanaMoSherif_SpareShop /o:ranamosherif /d:sonar.login=${SONAR_TOKEN} /d:sonar.host.url=https://sonarcloud.io /d:sonar.cs.opencover.reportsPaths="**\coverage*.opencover.xml" /d:sonar.coverage.exclusions="**test*/*.cs,**Tests*.cs,**Mock*.cs"
              dotnet build
              # dotnet test --no-restore --no-build --verbosity normal -f net6.0 --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover test/TESTPROJECT.csproj
              dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}

  workflows:
      main:
        jobs:
          - build:
              context: SonarCloud