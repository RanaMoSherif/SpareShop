version: 2.1
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    resource_class: small
    steps:
      - checkout
      - run:
          name: build
          command: |
            SLN_FILE=$(find . -name "*.sln")
            echo "Found solution file: $SLN_FILE"
            dotnet restore $SLN_FILE
            dotnet build

  build-docker:
    docker:
      - image: docker:20.10.23
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            echo ${DOCKER_PASS}
            echo ${DOCKER_USER}
            docker build -t spareshop:latest .
      - run:
          name: Save Docker Image
          command: |
            mkdir -p docker-cache
            docker save -o docker-cache/spareshop.tar spareshop:latest
      - persist_to_workspace:
          root: .
          paths:
            - docker-cache

  tag-and-push:
    docker:
      - image: docker:20.10.23
    steps:
      - attach_workspace:
          at: /workspace
      - setup_remote_docker
      - run:
          name: Load Docker Image
          command: |
            docker load -i /workspace/docker-cache/spareshop.tar
      - run:
          name: Get CALVER_TAG
          command: |
            export BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            export CALVER_TAG=$(date +"%Y.%m.%d")-${BRANCH_NAME}
            echo "export CALVER_TAG=${CALVER_TAG}" >> $BASH_ENV
      # - run:
      #     name: Tag Git Repository
      #     command: |
      #       apk update && apk add git && git --version
      #       git config --global user.email "ranasherif447@gmail.com"
      #       git config --global user.name "RanaMoSherif"
      #       git tag "${CALVER_TAG}"
      #       git push origin "${CALVER_TAG}"
      # - run:
      #     name: Tag Docker Image and Push to Amazon ECR
      #     command: |
      #       docker tag spareshop:latest <ECR_REPOSITORY_URL>:${CALVER_TAG}
      #       $(aws ecr get-login --no-include-email --region <REGION>)
      #       docker push <ECR_REPOSITORY_URL>:${CALVER_TAG}
      - run:
          name: Tag Docker Image and Push to Docker Hub
          command: |
            echo ${DOCKER_PASS} | docker login --username ${DOCKER_USER} --password-stdin
            docker tag spareshop:latest ${DOCKER_USER}/spareshop:${CALVER_TAG}
            docker push ${DOCKER_USER}/spareshop:${CALVER_TAG}

workflows:
  build-test-tag-deploy:
    jobs:
      # - build
      - build-docker
      - tag-and-push:
          requires:
            - build-docker