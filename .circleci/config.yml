version: 2.1

parameters:
  docker_image:
    type: string
    default: "mcr.microsoft.com/dotnet/sdk:7.0"
  resource_class:
    type: string
    default: "small"
  sonar_project_key:
    type: string
    default: "your_project_key"
  coverage_file:
    type: string
    default: "path_to_your_coverage_report.xml"

jobs:
  build-and-test:
    docker:
      - image: << pipeline.parameters.docker_image >>
    resource_class: << pipeline.parameters.resource_class >>
    steps:
      - checkout
      - run:
          name: Install unzip
          command: apt-get update && apt-get install -y unzip
      - run:
          name: Find .sln file and run dotnet restore
          command: |
            SLN_FILE=$(find . -name "*.sln")
            echo "Found solution file: $SLN_FILE"
            dotnet restore $SLN_FILE
      - run:
          name: Find .sln file and run dotnet publish
          command: |
            SLN_FILE=$(find . -name "*.sln")
            echo "Found solution file: $SLN_FILE"
            dotnet publish $SLN_FILE -c Release -o out
  check-quality-gates:
    docker:
      - image: << pipeline.parameters.docker_image >>
    resource_class: << pipeline.parameters.resource_class >>
    steps:
      - run:
          name: Check Quality Gates
          command: |
            sonar-scanner begin /k:<< pipeline.parameters.sonar_project_key >>
            dotnet build
            dotnet test
            sonar-scanner end
  check-unit-test-coverage:
    docker:
      - image: << pipeline.parameters.docker_image >>
    resource_class: << pipeline.parameters.resource_class >>
    steps:
      - run:
          name: Check Unit Test Coverage
          command: |
            reportgenerator "-reports:<< pipeline.parameters.coverage_file >>" "-targetdir:coverage_report" "-reporttypes:HTMLInline;HTMLChart"

workflows:
  sample:
    jobs:
      - build-and-test
      - check-quality-gates
      - check-unit-test-coverage
